-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.customer
(
    customer_id integer NOT NULL,
    customer_name character varying(50) COLLATE pg_catalog."default",
    email character varying(50) COLLATE pg_catalog."default",
    reg_date date,
    card_number character varying(15) COLLATE pg_catalog."default",
    date_of_birth date,
    gender character(1) COLLATE pg_catalog."default",
    CONSTRAINT customer_pkey PRIMARY KEY (customer_id)
);

CREATE TABLE IF NOT EXISTS public.product
(
    product_id integer NOT NULL,
    product_name character varying(100) COLLATE pg_catalog."default",
    description character varying(250) COLLATE pg_catalog."default",
    product_price double precision,
    product_type_id integer,
    CONSTRAINT product_pkey PRIMARY KEY (product_id)
);

CREATE TABLE IF NOT EXISTS public.product_type
(
    product_type_id integer NOT NULL,
    product_type character varying(50) COLLATE pg_catalog."default",
    product_category character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT product_type_pkey PRIMARY KEY (product_type_id)
);

CREATE TABLE IF NOT EXISTS public.sales_detail
(
    sales_detail_id integer NOT NULL,
    transaction_id integer,
    product_id integer,
    quantity integer,
    price double precision,
    CONSTRAINT sales_detail_pkey PRIMARY KEY (sales_detail_id)
);

CREATE TABLE IF NOT EXISTS public.sales_outlet
(
    sales_outlet_id integer NOT NULL,
    sales_outlet_type character varying(20) COLLATE pg_catalog."default",
    address character varying(50) COLLATE pg_catalog."default",
    city character varying(40) COLLATE pg_catalog."default",
    telephone character varying(15) COLLATE pg_catalog."default",
    postal_code integer,
    manager integer,
    CONSTRAINT sales_outlet_pkey PRIMARY KEY (sales_outlet_id)
);

CREATE TABLE IF NOT EXISTS public.sales_transaction
(
    transaction_id integer NOT NULL,
    transaction_date date,
    transaction_time time without time zone,
    sales_outlet_id integer,
    staff_id integer,
    customer_id integer,
    CONSTRAINT sales_transaction_pkey PRIMARY KEY (transaction_id)
);

CREATE TABLE IF NOT EXISTS public.staff
(
    staff_id integer NOT NULL,
    first_name character varying(50) COLLATE pg_catalog."default",
    last_name character varying(50) COLLATE pg_catalog."default",
    "position" character varying(50) COLLATE pg_catalog."default",
    start_date date,
    location character varying(5) COLLATE pg_catalog."default",
    CONSTRAINT staff_pkey PRIMARY KEY (staff_id)
);

ALTER TABLE IF EXISTS public.product
    ADD CONSTRAINT product_product_type_id_fkey FOREIGN KEY (product_type_id)
    REFERENCES public.product_type (product_type_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.sales_detail
    ADD CONSTRAINT sales_detail_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.product (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.sales_detail
    ADD CONSTRAINT sales_detail_transaction_id_fkey FOREIGN KEY (transaction_id)
    REFERENCES public.sales_transaction (transaction_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.sales_transaction
    ADD CONSTRAINT sales_transaction_customer_id_fkey FOREIGN KEY (customer_id)
    REFERENCES public.customer (customer_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.sales_transaction
    ADD CONSTRAINT sales_transaction_sales_outlet_id_fkey FOREIGN KEY (sales_outlet_id)
    REFERENCES public.sales_outlet (sales_outlet_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.sales_transaction
    ADD CONSTRAINT sales_transaction_staff_id_fkey FOREIGN KEY (staff_id)
    REFERENCES public.staff (staff_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;
